function [simul simul_LTCI simul_noLTCI]=fn_simul(para,opti_LTCI,opti_noLTCI)

simul.N=10000;
% probmatrixm=rand(simul.N,480);
% probmatrixf=rand(simul.N,480);
% save simul probmatrixm probmatrixf
load C:\Kuaipan\Research\LTCI\Partnership\simul
% probmatrixm=zeros(simul.N,480);
% probmatrixf=zeros(simul.N,480);

simul_LTCI.asset=zeros(simul.N,para.T);
simul_LTCI.asset(:,1)=ones(simul.N,1)*para.cash;
simul_LTCI.sick_t=zeros(simul.N,para.T+1);
simul_LTCI.protect=zeros(simul.N,para.T+1);
simul_LTCI.consumption=zeros(simul.N,para.T);
simul_LTCI.medcost=zeros(simul.N,para.T);
simul_LTCI.medcost_total=zeros(simul.N,para.T); % including the cost paid by Medicare;
simul_LTCI.Mcaid=zeros(simul.N,para.T); % whether using Medicaid for individual i at time t.
simul_LTCI.Medicare=zeros(simul.N,para.T); % how much Medicare pay.
simul_LTCI.Medicaid=zeros(simul.N,para.T); % how much Medicaid pay.
simul_LTCI.Medicaid_beforeprogram=zeros(simul.N,para.T); % how much Medicaid pay.
simul_LTCI.oop=zeros(simul.N,para.T); % how much pay out of pocket.
simul_LTCI.premium=zeros(simul.N,para.T); 
simul_LTCI.benefit=zeros(simul.N,para.T);
simul_LTCI.utility=zeros(simul.N,para.T);

simul_noLTCI.asset=zeros(simul.N,para.T);
simul_noLTCI.asset(:,1)=ones(simul.N,1)*para.cash;
simul_noLTCI.consumption=zeros(simul.N,para.T);
simul_noLTCI.medcost=zeros(simul.N,para.T);
simul_noLTCI.medcost_total=zeros(simul.N,para.T);
simul_noLTCI.Mcaid=zeros(simul.N,para.T);
simul_noLTCI.Medicare=zeros(simul.N,para.T);
simul_noLTCI.Medicaid=zeros(simul.N,para.T);
simul_noLTCI.utility=zeros(simul.N,para.T);

% discretitize state variables; dcoule check to make sure this is
% consistent with the ones in fn_policy_function_part_sm/sf.
s_asset_min=log(0.001);  
s_asset_max=log(para.cash*2.5);
logs_asset=(s_asset_min:(s_asset_max-s_asset_min)/(para.grid_asset-1):s_asset_max)'; 

    
if para.defer==0 && para.sick_T==0;
    s_asset=exp(logs_asset);
elseif para.defer==1;
    s_asset=exp(logs_asset);
    s_sick_t=(0:1:para.grid_sick_t-1)';
    s_protect=[0;1];
elseif para.defer==2;
    s_asset=exp(logs_asset);
    s_sick_t_min=0;
    s_sick_t_max=para.sick_T;
    logs_sick_t=(s_sick_t_min:(s_sick_t_max-s_sick_t_min)/(para.grid_sick_t-1):s_sick_t_max)'; 
    s_sick_t=exp(logs_sick_t);
    s_protect=[0;1];
elseif para.defer>2;
end;

% Simulation.
% First simulate 10,000 individuals who are healthy at 65 and subject to
% LTC transition shocks. So they could be in any health status in later
% time periods.
simul.hstate=zeros(simul.N,para.T);
if para.singlem==1
    probmatrix=probmatrixm(1:simul.N,:); %#ok<NODEF>
elseif para.singlef==1;
    probmatrix=probmatrixf(1:simul.N,:); %#ok<NODEF>
end;
 
for t=1:para.T;
    if t==1;
        simul.hstate(:,t)=...
            1*(                                                                      probmatrix(:,t)<=para.q(t,1)                                                                               )+...
            2*(probmatrix(:,t)>para.q(t,1)                                         & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)                                                                   )+...
            3*(probmatrix(:,t)>para.q(t,1)+para.q(t,2)                             & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)+para.q(t,3)                                                       )+...
            4*(probmatrix(:,t)>para.q(t,1)+para.q(t,2)+para.q(t,3)                 & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)+para.q(t,3)+para.q(t,4)                                           )+...
            5*(probmatrix(:,t)>para.q(t,1)+para.q(t,2)+para.q(t,3)+para.q(t,4)     & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)+para.q(t,3)+para.q(t,4)+para.q(t,5)                               );
    elseif t>1;
        simul.hstate(:,t)=...
            1*(                                                                      probmatrix(:,t)<=para.q(t,1)                                                     ).*(simul.hstate(:,t-1)==1)+...
            2*(probmatrix(:,t)>para.q(t,1)                                         & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)                                         ).*(simul.hstate(:,t-1)==1)+...
            3*(probmatrix(:,t)>para.q(t,1)+para.q(t,2)                             & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)+para.q(t,3)                             ).*(simul.hstate(:,t-1)==1)+...
            4*(probmatrix(:,t)>para.q(t,1)+para.q(t,2)+para.q(t,3)                 & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)+para.q(t,3)+para.q(t,4)                 ).*(simul.hstate(:,t-1)==1)+...
            5*(probmatrix(:,t)>para.q(t,1)+para.q(t,2)+para.q(t,3)+para.q(t,4)     & probmatrix(:,t)<=para.q(t,1)+para.q(t,2)+para.q(t,3)+para.q(t,4)+para.q(t,5)     ).*(simul.hstate(:,t-1)==1)+...
            1*(                                                                      probmatrix(:,t)<=para.q(t,6)                                                     ).*(simul.hstate(:,t-1)==2)+...
            2*(probmatrix(:,t)>para.q(t,6)                                         & probmatrix(:,t)<=para.q(t,6)+para.q(t,7)                                         ).*(simul.hstate(:,t-1)==2)+...
            3*(probmatrix(:,t)>para.q(t,6)+para.q(t,7)                             & probmatrix(:,t)<=para.q(t,6)+para.q(t,7)+para.q(t,8)                             ).*(simul.hstate(:,t-1)==2)+...
            4*(probmatrix(:,t)>para.q(t,6)+para.q(t,7)+para.q(t,8)                 & probmatrix(:,t)<=para.q(t,6)+para.q(t,7)+para.q(t,8)+para.q(t,9)                 ).*(simul.hstate(:,t-1)==2)+...
            5*(probmatrix(:,t)>para.q(t,6)+para.q(t,7)+para.q(t,8)+para.q(t,9)     & probmatrix(:,t)<=para.q(t,6)+para.q(t,7)+para.q(t,8)+para.q(t,9)+para.q(t,10)    ).*(simul.hstate(:,t-1)==2)+...        
            1*(                                                                      probmatrix(:,t)<=para.q(t,11)                                                    ).*(simul.hstate(:,t-1)==3)+...
            2*(probmatrix(:,t)>para.q(t,11)                                        & probmatrix(:,t)<=para.q(t,11)+para.q(t,12)                                       ).*(simul.hstate(:,t-1)==3)+...
            3*(probmatrix(:,t)>para.q(t,11)+para.q(t,12)                           & probmatrix(:,t)<=para.q(t,11)+para.q(t,12)+para.q(t,13)                          ).*(simul.hstate(:,t-1)==3)+...
            4*(probmatrix(:,t)>para.q(t,11)+para.q(t,12)+para.q(t,13)              & probmatrix(:,t)<=para.q(t,11)+para.q(t,12)+para.q(t,13)+para.q(t,14)             ).*(simul.hstate(:,t-1)==3)+...
            5*(probmatrix(:,t)>para.q(t,11)+para.q(t,12)+para.q(t,13)+para.q(t,14) & probmatrix(:,t)<=para.q(t,11)+para.q(t,12)+para.q(t,13)+para.q(t,14)+para.q(t,15)).*(simul.hstate(:,t-1)==3)+...         
            1*(                                                                      probmatrix(:,t)<=para.q(t,16)                                                    ).*(simul.hstate(:,t-1)==4)+...
            2*(probmatrix(:,t)>para.q(t,16)                                        & probmatrix(:,t)<=para.q(t,16)+para.q(t,17)                                       ).*(simul.hstate(:,t-1)==4)+...
            3*(probmatrix(:,t)>para.q(t,16)+para.q(t,17)                           & probmatrix(:,t)<=para.q(t,16)+para.q(t,17)+para.q(t,18)                          ).*(simul.hstate(:,t-1)==4)+...
            4*(probmatrix(:,t)>para.q(t,16)+para.q(t,17)+para.q(t,18)              & probmatrix(:,t)<=para.q(t,16)+para.q(t,17)+para.q(t,18)+para.q(t,19)             ).*(simul.hstate(:,t-1)==4)+...
            5*(probmatrix(:,t)>para.q(t,16)+para.q(t,17)+para.q(t,18)+para.q(t,19) & probmatrix(:,t)<=para.q(t,16)+para.q(t,17)+para.q(t,18)+para.q(t,19)+para.q(t,20)).*(simul.hstate(:,t-1)==4)+...         
            1*(                                                                      probmatrix(:,t)<=para.q(t,21)                                                    ).*(simul.hstate(:,t-1)==5)+...
            2*(probmatrix(:,t)>para.q(t,21)                                        & probmatrix(:,t)<=para.q(t,21)+para.q(t,22)                                       ).*(simul.hstate(:,t-1)==5)+...
            3*(probmatrix(:,t)>para.q(t,21)+para.q(t,22)                           & probmatrix(:,t)<=para.q(t,21)+para.q(t,22)+para.q(t,23)                          ).*(simul.hstate(:,t-1)==5)+...
            4*(probmatrix(:,t)>para.q(t,21)+para.q(t,22)+para.q(t,23)              & probmatrix(:,t)<=para.q(t,21)+para.q(t,22)+para.q(t,23)+para.q(t,24)             ).*(simul.hstate(:,t-1)==5)+...
            5*(probmatrix(:,t)>para.q(t,21)+para.q(t,22)+para.q(t,23)+para.q(t,24) & probmatrix(:,t)<=para.q(t,21)+para.q(t,22)+para.q(t,23)+para.q(t,24)+para.q(t,25)).*(simul.hstate(:,t-1)==5);  
    end;
end;

LTCI=1;
if para.defer==0 && para.sick_T==0;
    for t=1:para.T;
        simul_LTCI.Mcaid(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)<para.cbar_hc+para.wbar) .*(para.ss+LTCI*para.B(t,2)-para.M(t,2)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_hc)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)<para.cbar_alf+para.wbar).*(para.ss+LTCI*para.B(t,3)-para.M(t,3)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_alf)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)<para.cbar_nh+para.wbar) .*(para.ss+LTCI*para.B(t,4)-para.M(t,4)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_nh);
        simul_LTCI.consumption(:,t)=...
            (simul.hstate(:,t)==1).*interp1(opti_LTCI.s.a,opti_LTCI.x.healthy(:,t),simul_LTCI.asset(:,t),'linear','extrap')+...
            (simul.hstate(:,t)==2).*interp1(opti_LTCI.s.a,opti_LTCI.x.hc(:,t),simul_LTCI.asset(:,t),'linear','extrap')+...
            (simul.hstate(:,t)==3).*interp1(opti_LTCI.s.a,opti_LTCI.x.alf(:,t),simul_LTCI.asset(:,t),'linear','extrap')+...
            (simul.hstate(:,t)==4).*interp1(opti_LTCI.s.a,opti_LTCI.x.nh(:,t),simul_LTCI.asset(:,t),'linear','extrap');
        simul_LTCI.consumption_level(:,t)=...
            (simul.hstate(:,t)==1).*(para.cons_healthy+(simul_LTCI.asset(:,t)+para.ss-LTCI*para.P(t,1)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_hc +(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_alf+(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_nh +(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_hc +para.cbar_hc +min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_alf+para.cbar_alf+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_nh +para.cbar_nh +min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar).*simul_LTCI.consumption(:,t));
        temp_utility=fn_utility(simul_LTCI.consumption_level(:,t),para.crra);
        temp_utility(isinf(temp_utility))=0;
        simul_LTCI.utility(:,t)=para.discount^t*temp_utility;
        if t<para.T
            simul_LTCI.asset(:,t+1)=...
                (simul.hstate(:,t)==1).*max(0.001,(simul_LTCI.asset(:,t)+para.ss-LTCI*para.P(t,1)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar).*(1-simul_LTCI.consumption(:,t))*para.RB);       
        end;
        simul_LTCI.medcost(:,t)=...
            (simul.hstate(:,t)==2)*para.M(t,2)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3)*para.M(t,3)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4)*para.M(t,4)/para.rfactor(t,1);
        simul_LTCI.Medicare(:,t)=...
            (simul.hstate(:,t)==2)*para.M(t,2)*para.Mcare/(1-para.Mcare)/para.rfactor(t,1);
        simul_LTCI.Medicaid(:,t)=...        
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,2)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar)+para.cbar_hc -para.ss-LTCI*para.B(t,2)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,3)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar)+para.cbar_alf-para.ss-LTCI*para.B(t,3)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,4)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar)+para.cbar_nh -para.ss-LTCI*para.B(t,4)-simul_LTCI.asset(:,t))/para.rfactor(t,1);
        simul_LTCI.benefit(:,t)=...
            (simul.hstate(:,t)==2)*para.B(t,2)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3)*para.B(t,3)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4)*para.B(t,4)/para.rfactor(t,1);
        simul_LTCI.premium(:,t)=...
            (simul.hstate(:,t)==1)*para.P(t,1)/para.rfactor(t,1);
        simul_LTCI.oop(:,t)=simul_LTCI.medcost(:,t)-simul_LTCI.benefit(:,t)-simul_LTCI.Medicaid(:,t);
    end;
    simul_LTCI.medcost_total=simul_LTCI.medcost+simul_LTCI.Medicare;    

elseif para.defer==1; % elimination;
    
    for t=1:para.T;
        if t==1;
            simul_LTCI.sick_t(:,1)=(simul.hstate(:,1)==2)*para.hcdaycount+(simul.hstate(:,1)==3)+(simul.hstate(:,1)==4);
        end;
        simul_LTCI.Mcaid(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-para.M(t,2)<para.cbar_hc +para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*(para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-para.M(t,2)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_hc)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-para.M(t,3)<para.cbar_alf+para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*(para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-para.M(t,3)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_alf)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-para.M(t,4)<para.cbar_nh +para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*(para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-para.M(t,4)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_nh);
        simul_LTCI.consumption(:,t)=...
            (simul.hstate(:,t)==1).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.healthy(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear')+...
            (simul.hstate(:,t)==2).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.hc(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear')+...
            (simul.hstate(:,t)==3).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.alf(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear')+...
            (simul.hstate(:,t)==4).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.nh(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear');
        simul_LTCI.consumption(isnan(simul_LTCI.consumption(:,t)),t)=0; % if an individual is dead last period, their consumption percent cannot be interpolated. So it returns NaN. Rewrite all NaN to 0;
        simul_LTCI.consumption_level(:,t)=...
            (simul.hstate(:,t)==1).*(simul_LTCI.asset(:,t)+para.ss-LTCI*(simul_LTCI.sick_t(:,t)<=para.sick_T)*para.P(t,1)).*simul_LTCI.consumption(:,t)+...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_hc +(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-para.M(t,2)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_alf+(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-para.M(t,3)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_nh +(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-para.M(t,4)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_hc +para.cbar_hc +min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_alf+para.cbar_alf+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_nh +para.cbar_nh +min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*simul_LTCI.consumption(:,t));
        temp_utility=fn_utility(simul_LTCI.consumption_level(:,t),para.crra);
        temp_utility(isinf(temp_utility))=0;
        simul_LTCI.utility(:,t)=para.discount^t*temp_utility;
        if t<para.T;
            simul_LTCI.asset(:,t+1)=...
                (simul.hstate(:,t)==1).*max(0.001,(simul_LTCI.asset(:,t)+para.ss-LTCI*para.P(t,1)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB)).*(1-simul_LTCI.consumption(:,t))*para.RB);       
            simul_LTCI.sick_t(:,t+1)=min(para.sick_T+1,...
                (simul.hstate(:,t+1)==1).*(simul_LTCI.sick_t(:,t))+...
                (simul.hstate(:,t+1)==2).*(simul_LTCI.sick_t(:,t)+1*para.hcdaycount)+...
                (simul.hstate(:,t+1)==3).*(simul_LTCI.sick_t(:,t)+1)+...
                (simul.hstate(:,t+1)==4).*(simul_LTCI.sick_t(:,t)+1)+...
                (simul.hstate(:,t+1)==5).*(simul_LTCI.sick_t(:,t)));
            simul_LTCI.protect(:,t+1)=zeros(simul.N,1);
        end;
        simul_LTCI.medcost(:,t)=...
            (simul.hstate(:,t)==2)*para.M(t,2)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3)*para.M(t,3)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4)*para.M(t,4)/para.rfactor(t,1);
        simul_LTCI.Medicare(:,t)=...
            (simul.hstate(:,t)==2)*para.M(t,2)*para.Mcare/(1-para.Mcare)/para.rfactor(t,1);   
        simul_LTCI.Medicaid(:,t)=...        
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,2)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_hc -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,3)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_alf-para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,4)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_nh -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-simul_LTCI.asset(:,t))/para.rfactor(t,1);
        simul_LTCI.Medicaid_beforeprogram(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(simul_LTCI.sick_t(:,t)>para.sick_T).*(para.M(t,2)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_hc -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(simul_LTCI.sick_t(:,t)>para.sick_T).*(para.M(t,3)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_alf-para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(simul_LTCI.sick_t(:,t)>para.sick_T).*(para.M(t,4)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_nh -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-simul_LTCI.asset(:,t))/para.rfactor(t,1);
        simul_LTCI.benefit(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)/para.rfactor(t,1);
        simul_LTCI.premium(:,t)=...
            (simul.hstate(:,t)==1).*(simul_LTCI.sick_t(:,t)<=para.sick_T)*para.P(t,1)/para.rfactor(t,1);
        simul_LTCI.oop(:,t)=simul_LTCI.medcost(:,t)-simul_LTCI.benefit(:,t)-simul_LTCI.Medicaid(:,t);
    end;
    simul_LTCI.medcost_total=simul_LTCI.medcost+simul_LTCI.Medicare;   
    
elseif para.defer==2; % deductible;
    
    for t=1:para.T;
        if t==1;
            simul_LTCI.sick_t(:,1)=...
            (simul.hstate(:,1)==2)+...
            (simul.hstate(:,1)==3)+...
            (simul.hstate(:,1)==4).*para.hcdaycount;
        end;
        simul_LTCI.Mcaid(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-para.M(t,2)<para.cbar_hc +para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*(para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-para.M(t,2)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_hc)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-para.M(t,3)<para.cbar_alf+para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*(para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-para.M(t,3)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_alf)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-para.M(t,4)<para.cbar_nh +para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*(para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-para.M(t,4)+(para.RB-1)*simul_LTCI.asset(:,t)/para.RB<para.cbar_nh);
        simul_LTCI.consumption(:,t)=...
            (simul.hstate(:,t)==1).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.healthy(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear')+...
            (simul.hstate(:,t)==2).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.hc(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear')+...
            (simul.hstate(:,t)==3).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.alf(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear')+...
            (simul.hstate(:,t)==4).*interpn(s_asset,s_sick_t,s_protect,reshape(opti_LTCI.x.nh(:,t),para.grid_asset,para.grid_sick_t,para.grid_protect),simul_LTCI.asset(:,t),simul_LTCI.sick_t(:,t),simul_LTCI.protect(:,t),'linear');
        simul_LTCI.consumption(isnan(simul_LTCI.consumption(:,t)),t)=0; % if an individual is dead last period, their consumption percent cannot be interpolated. So it returns NaN. Rewrite all NaN to 0;
        simul_LTCI.consumption_level(:,t)=...
            (simul.hstate(:,t)==1).*(simul_LTCI.asset(:,t)+para.ss-LTCI*(simul_LTCI.sick_t(:,t)<=para.sick_T)*para.P(t,1)).*simul_LTCI.consumption(:,t)+...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_hc +(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-para.M(t,2)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_alf+(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-para.M(t,3)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==0).*(para.cons_nh +(simul_LTCI.asset(:,t)+para.ss+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-para.M(t,4)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_hc +para.cbar_hc +min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_alf+para.cbar_alf+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*simul_LTCI.consumption(:,t))+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(para.cons_nh +para.cbar_nh +min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*simul_LTCI.consumption(:,t));
        temp_utility=fn_utility(simul_LTCI.consumption_level(:,t),para.crra);
        temp_utility(isinf(temp_utility))=0;
        simul_LTCI.utility(:,t)=para.discount^t*temp_utility;
        if t<para.T;
            simul_LTCI.asset(:,t+1)=...
                (simul.hstate(:,t)==1).*max(0.001,(simul_LTCI.asset(:,t)+para.ss-LTCI*para.P(t,1)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==0).*max(0.001,(simul_LTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*(1-simul_LTCI.consumption(:,t))*para.RB)+...
                (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*max(0.001,min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1)).*(1-simul_LTCI.consumption(:,t))*para.RB);       
            simul_LTCI.sick_t(:,t+1)=min(para.sick_T+1,...
                (simul.hstate(:,t+1)==1).*(simul_LTCI.sick_t(:,t))+...
                (simul.hstate(:,t+1)==2).*(simul_LTCI.sick_t(:,t)+1*para.hcdaycount)+...
                (simul.hstate(:,t+1)==3).*(simul_LTCI.sick_t(:,t)+1)+...
                (simul.hstate(:,t+1)==4).*(simul_LTCI.sick_t(:,t)+1)+...
                (simul.hstate(:,t+1)==5).*(simul_LTCI.sick_t(:,t)));
            simul_LTCI.protect(:,t+1)=zeros(simul.N,1);
        end;
        simul_LTCI.medcost(:,t)=...
            (simul.hstate(:,t)==2)*para.M(t,2)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3)*para.M(t,3)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4)*para.M(t,4)/para.rfactor(t,1);
        simul_LTCI.Medicare(:,t)=...
            (simul.hstate(:,t)==2)*para.M(t,2)*para.Mcare/(1-para.Mcare)/para.rfactor(t,1);   
        simul_LTCI.Medicaid(:,t)=...        
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,2)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1))+para.cbar_hc -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,3)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1))+para.cbar_alf-para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(para.M(t,4)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*para.dfd_fixed(t,1))+para.cbar_nh -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-simul_LTCI.asset(:,t))/para.rfactor(t,1);
        simul_LTCI.Medicaid_beforeprogram(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.Mcaid(:,t)==1).*(simul_LTCI.sick_t(:,t)>para.sick_T).*(para.M(t,2)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_hc -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.Mcaid(:,t)==1).*(simul_LTCI.sick_t(:,t)>para.sick_T).*(para.M(t,3)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_alf-para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)-simul_LTCI.asset(:,t))/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.Mcaid(:,t)==1).*(simul_LTCI.sick_t(:,t)>para.sick_T).*(para.M(t,4)+min(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB,para.wbar+LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T).*simul_LTCI.protect(:,t).*(simul_LTCI.asset(:,t)-(para.RB-1)*simul_LTCI.asset(:,t)/para.RB))+para.cbar_nh -para.ss-LTCI*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)-simul_LTCI.asset(:,t))/para.rfactor(t,1);
        simul_LTCI.benefit(:,t)=...
            (simul.hstate(:,t)==2).*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,2)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==3).*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,3)/para.rfactor(t,1)+...
            (simul.hstate(:,t)==4).*(simul_LTCI.sick_t(:,t)>para.sick_T)*para.B(t,4)/para.rfactor(t,1);
        simul_LTCI.premium(:,t)=...
            (simul.hstate(:,t)==1).*(simul_LTCI.sick_t(:,t)<=para.sick_T)*para.P(t,1)/para.rfactor(t,1);
        simul_LTCI.oop(:,t)=simul_LTCI.medcost(:,t)-simul_LTCI.benefit(:,t)-simul_LTCI.Medicaid(:,t);
    end;
    simul_LTCI.medcost_total=simul_LTCI.medcost+simul_LTCI.Medicare;    
    
elseif para.defer>2;
end;

LTCI=0;
for t=1:para.T;
    simul_noLTCI.Mcaid(:,t)=...
        (simul.hstate(:,t)==2).*(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)<para.cbar_hc+para.wbar) .*(para.ss+LTCI*para.B(t,2)-para.M(t,2)+(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB<para.cbar_hc)+...
        (simul.hstate(:,t)==3).*(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)<para.cbar_alf+para.wbar).*(para.ss+LTCI*para.B(t,3)-para.M(t,3)+(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB<para.cbar_alf)+...
        (simul.hstate(:,t)==4).*(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)<para.cbar_nh+para.wbar) .*(para.ss+LTCI*para.B(t,4)-para.M(t,4)+(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB<para.cbar_nh);
    simul_noLTCI.consumption(:,t)=...
        (simul.hstate(:,t)==1).*interp1(opti_noLTCI.s.a(:,1),opti_noLTCI.x.healthy(:,t),simul_noLTCI.asset(:,t),'linear','extrap')+...
        (simul.hstate(:,t)==2).*interp1(opti_noLTCI.s.a(:,1),opti_noLTCI.x.hc(:,t),simul_noLTCI.asset(:,t),'linear','extrap')+...
        (simul.hstate(:,t)==3).*interp1(opti_noLTCI.s.a(:,1),opti_noLTCI.x.alf(:,t),simul_noLTCI.asset(:,t),'linear','extrap')+...
        (simul.hstate(:,t)==4).*interp1(opti_noLTCI.s.a(:,1),opti_noLTCI.x.nh(:,t),simul_noLTCI.asset(:,t),'linear','extrap');
    simul_noLTCI.consumption_level(:,t)=...
        (simul.hstate(:,t)==1).*(simul_noLTCI.asset(:,t)+para.ss-LTCI*para.P(t,1)).*simul_noLTCI.consumption(:,t)+...
        (simul.hstate(:,t)==2).*(simul_noLTCI.Mcaid(:,t)==0).*(para.cons_hc +(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)).*simul_noLTCI.consumption(:,t))+...
        (simul.hstate(:,t)==3).*(simul_noLTCI.Mcaid(:,t)==0).*(para.cons_alf+(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)).*simul_noLTCI.consumption(:,t))+...
        (simul.hstate(:,t)==4).*(simul_noLTCI.Mcaid(:,t)==0).*(para.cons_nh +(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)).*simul_noLTCI.consumption(:,t))+...
        (simul.hstate(:,t)==2).*(simul_noLTCI.Mcaid(:,t)==1).*(para.cons_hc +para.cbar_hc +min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar).*simul_noLTCI.consumption(:,t))+...
        (simul.hstate(:,t)==3).*(simul_noLTCI.Mcaid(:,t)==1).*(para.cons_alf+para.cbar_alf+min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar).*simul_noLTCI.consumption(:,t))+...
        (simul.hstate(:,t)==4).*(simul_noLTCI.Mcaid(:,t)==1).*(para.cons_nh +para.cbar_nh +min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar).*simul_noLTCI.consumption(:,t));
    temp_utility=fn_utility(simul_noLTCI.consumption_level(:,t),para.crra);
    temp_utility(isinf(temp_utility))=0;
    simul_noLTCI.utility(:,t)=para.discount^t*temp_utility;
    if t<para.T;
        simul_noLTCI.asset(:,t+1)=...
            (simul.hstate(:,t)==1).*max(0.001,(simul_noLTCI.asset(:,t)+para.ss-LTCI*para.P(t,1)).*(1-simul_noLTCI.consumption(:,t))*para.RB)+...
            (simul.hstate(:,t)==2).*(simul_noLTCI.Mcaid(:,t)==0).*max(0.001,(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,2)-para.M(t,2)).*(1-simul_noLTCI.consumption(:,t))*para.RB)+...
            (simul.hstate(:,t)==3).*(simul_noLTCI.Mcaid(:,t)==0).*max(0.001,(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,3)-para.M(t,3)).*(1-simul_noLTCI.consumption(:,t))*para.RB)+...
            (simul.hstate(:,t)==4).*(simul_noLTCI.Mcaid(:,t)==0).*max(0.001,(simul_noLTCI.asset(:,t)+para.ss+LTCI*para.B(t,4)-para.M(t,4)).*(1-simul_noLTCI.consumption(:,t))*para.RB)+...
            (simul.hstate(:,t)==2).*(simul_noLTCI.Mcaid(:,t)==1).*max(0.001,min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar).*(1-simul_noLTCI.consumption(:,t))*para.RB)+...
            (simul.hstate(:,t)==3).*(simul_noLTCI.Mcaid(:,t)==1).*max(0.001,min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar).*(1-simul_noLTCI.consumption(:,t))*para.RB)+...
            (simul.hstate(:,t)==4).*(simul_noLTCI.Mcaid(:,t)==1).*max(0.001,min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar).*(1-simul_noLTCI.consumption(:,t))*para.RB);       
    end;
    simul_noLTCI.medcost(:,t)=...
        (simul.hstate(:,t)==2)*para.M(t,2)/para.rfactor(t,1)+...
        (simul.hstate(:,t)==3)*para.M(t,3)/para.rfactor(t,1)+...
        (simul.hstate(:,t)==4)*para.M(t,4)/para.rfactor(t,1);
    simul_noLTCI.Medicare(:,t)=...
        (simul.hstate(:,t)==2)*para.M(t,2)*para.Mcare/(1-para.Mcare)/para.rfactor(t,1);
    simul_noLTCI.Medicaid(:,t)=...        
        (simul.hstate(:,t)==2).*(simul_noLTCI.Mcaid(:,t)==1).*(para.M(t,2)+min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar)+para.cbar_hc -para.ss-LTCI*para.B(t,2)-simul_noLTCI.asset(:,t))/para.rfactor(t,1)+...
        (simul.hstate(:,t)==3).*(simul_noLTCI.Mcaid(:,t)==1).*(para.M(t,3)+min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar)+para.cbar_alf-para.ss-LTCI*para.B(t,3)-simul_noLTCI.asset(:,t))/para.rfactor(t,1)+...
        (simul.hstate(:,t)==4).*(simul_noLTCI.Mcaid(:,t)==1).*(para.M(t,4)+min(simul_noLTCI.asset(:,t)-(para.RB-1)*simul_noLTCI.asset(:,t)/para.RB,para.wbar)+para.cbar_nh -para.ss-LTCI*para.B(t,4)-simul_noLTCI.asset(:,t))/para.rfactor(t,1);
    simul_noLTCI.oop(:,t)=simul_noLTCI.medcost(:,t)-simul_noLTCI.Medicaid(:,t);
end;
simul_noLTCI.medcost_total=simul_noLTCI.medcost+simul_noLTCI.Medicare;








% % examine the program.
% hhid=20;hhid=82;hhid=963;
% test=[simul_LTCI.asset(hhid,1:para.T);para.ss*ones(1,para.T);simul.hstate(hhid,1:para.T);simul_LTCI.sick_t(hhid,1:para.T);simul_LTCI.medcost(hhid,1:para.T).*para.rfactor(:,1)';simul_LTCI.premium(hhid,1:para.T).*para.rfactor(:,1)';simul_LTCI.benefit(hhid,1:para.T).*para.rfactor(:,1)';simul_LTCI.oop(hhid,1:para.T).*para.rfactor(:,1)';simul_LTCI.protect(hhid,1:para.T);simul_LTCI.Mcaid(hhid,1:para.T);simul_LTCI.Medicaid(hhid,1:para.T).*para.rfactor(:,1)';simul_LTCI.consumption(hhid,1:para.T);simul_LTCI.consumption_level(hhid,1:para.T)]'
% plot(sum(simul_LTCI.consumption(:,1:para.T-12))./sum(simul_LTCI.consumption(:,1:para.T-12)~=0));
% plot(mean(simul_LTCI.consumption_level(:,1:para.T-12)));
% plot(sum(simul_LTCI.consumption_level(:,1:para.T-12))./sum(simul_LTCI.consumption_level(:,1:para.T-12)~=0));
% plot(sum(simul_LTCI.asset(:,1:para.T-12))./sum(simul_LTCI.asset(:,1:para.T-12)~=0));

% Test transition probabilities.
% p=zeros(para.T,25);
% p(1,1)=sum((simul.hstate(:,1)==1))/simul.N;
% p(1,2)=sum((simul.hstate(:,1)==2))/simul.N;
% p(1,3)=sum((simul.hstate(:,1)==3))/simul.N;
% p(1,4)=sum((simul.hstate(:,1)==4))/simul.N;
% p(1,5)=sum((simul.hstate(:,1)==5))/simul.N;
% 
% pa(1,1)=sum((simul.hstate(:,1)==1));
% pa(1,2)=sum((simul.hstate(:,1)==2));
% pa(1,3)=sum((simul.hstate(:,1)==3));
% pa(1,4)=sum((simul.hstate(:,1)==4));
% pa(1,5)=sum((simul.hstate(:,1)==5));
% 
% for t=2:para.T;
%     p(t, 1)=sum((simul.hstate(:,t)==1).*(simul.hstate(:,t-1)==1))/sum((simul.hstate(:,t-1)==1));
%     p(t, 2)=sum((simul.hstate(:,t)==2).*(simul.hstate(:,t-1)==1))/sum((simul.hstate(:,t-1)==1));
%     p(t, 3)=sum((simul.hstate(:,t)==3).*(simul.hstate(:,t-1)==1))/sum((simul.hstate(:,t-1)==1));
%     p(t, 4)=sum((simul.hstate(:,t)==4).*(simul.hstate(:,t-1)==1))/sum((simul.hstate(:,t-1)==1));
%     p(t, 5)=sum((simul.hstate(:,t)==5).*(simul.hstate(:,t-1)==1))/sum((simul.hstate(:,t-1)==1));
%     p(t, 6)=sum((simul.hstate(:,t)==1).*(simul.hstate(:,t-1)==2))/sum((simul.hstate(:,t-1)==2));
%     p(t, 7)=sum((simul.hstate(:,t)==2).*(simul.hstate(:,t-1)==2))/sum((simul.hstate(:,t-1)==2));
%     p(t, 8)=sum((simul.hstate(:,t)==3).*(simul.hstate(:,t-1)==2))/sum((simul.hstate(:,t-1)==2));
%     p(t, 9)=sum((simul.hstate(:,t)==4).*(simul.hstate(:,t-1)==2))/sum((simul.hstate(:,t-1)==2));
%     p(t,10)=sum((simul.hstate(:,t)==5).*(simul.hstate(:,t-1)==2))/sum((simul.hstate(:,t-1)==2));
%     p(t,11)=sum((simul.hstate(:,t)==1).*(simul.hstate(:,t-1)==3))/sum((simul.hstate(:,t-1)==3));
%     p(t,12)=sum((simul.hstate(:,t)==2).*(simul.hstate(:,t-1)==3))/sum((simul.hstate(:,t-1)==3));
%     p(t,13)=sum((simul.hstate(:,t)==3).*(simul.hstate(:,t-1)==3))/sum((simul.hstate(:,t-1)==3));
%     p(t,14)=sum((simul.hstate(:,t)==4).*(simul.hstate(:,t-1)==3))/sum((simul.hstate(:,t-1)==3));
%     p(t,15)=sum((simul.hstate(:,t)==5).*(simul.hstate(:,t-1)==3))/sum((simul.hstate(:,t-1)==3));
%     p(t,16)=sum((simul.hstate(:,t)==1).*(simul.hstate(:,t-1)==4))/sum((simul.hstate(:,t-1)==4));
%     p(t,17)=sum((simul.hstate(:,t)==2).*(simul.hstate(:,t-1)==4))/sum((simul.hstate(:,t-1)==4));
%     p(t,18)=sum((simul.hstate(:,t)==3).*(simul.hstate(:,t-1)==4))/sum((simul.hstate(:,t-1)==4));
%     p(t,19)=sum((simul.hstate(:,t)==4).*(simul.hstate(:,t-1)==4))/sum((simul.hstate(:,t-1)==4));
%     p(t,20)=sum((simul.hstate(:,t)==5).*(simul.hstate(:,t-1)==4))/sum((simul.hstate(:,t-1)==4));
%     p(t,21)=sum((simul.hstate(:,t)==1).*(simul.hstate(:,t-1)==5))/sum((simul.hstate(:,t-1)==5));
%     p(t,22)=sum((simul.hstate(:,t)==2).*(simul.hstate(:,t-1)==5))/sum((simul.hstate(:,t-1)==5));
%     p(t,23)=sum((simul.hstate(:,t)==3).*(simul.hstate(:,t-1)==5))/sum((simul.hstate(:,t-1)==5));
%     p(t,24)=sum((simul.hstate(:,t)==4).*(simul.hstate(:,t-1)==5))/sum((simul.hstate(:,t-1)==5));
%     p(t,25)=sum((simul.hstate(:,t)==5).*(simul.hstate(:,t-1)==5))/sum((simul.hstate(:,t-1)==5));
% 
%     pa(t,1)=sum((simul.hstate(:,t)==1));
%     pa(t,2)=sum((simul.hstate(:,t)==2));
%     pa(t,3)=sum((simul.hstate(:,t)==3));
%     pa(t,4)=sum((simul.hstate(:,t)==4));
%     pa(t,5)=sum((simul.hstate(:,t)==5));
% end;
% % The result is perfect if the number below is 0. No problem.
% max(abs(pa/simul.N-para.prob(2:para.T+1,:)))
% ans =
%     0.0021    0.0013    0.0005    0.0010    0.0021









